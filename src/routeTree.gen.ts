/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/r&__root'
import { Route as PrivateImport } from './routes/r&_private'
import { Route as AuthImport } from './routes/r&_auth'
import { Route as PrivateTestImport } from './routes/r&_private/r&test'
import { Route as PrivateRulesImport } from './routes/r&_private/r&rules'
import { Route as PrivateOptionsImport } from './routes/r&_private/r&options'
import { Route as PrivateHomeImport } from './routes/r&_private/r&home'
import { Route as PrivateGameIndexImport } from './routes/r&_private/r&game/r&index'
import { Route as AuthLoginIndexImport } from './routes/r&_auth/r&_login/r&index'

// Create/Update Routes

const PrivateRoute = PrivateImport.update({
  id: '/_private',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const PrivateTestRoute = PrivateTestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateRulesRoute = PrivateRulesImport.update({
  id: '/rules',
  path: '/rules',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateOptionsRoute = PrivateOptionsImport.update({
  id: '/options',
  path: '/options',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateHomeRoute = PrivateHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateGameIndexRoute = PrivateGameIndexImport.update({
  id: '/game/',
  path: '/game/',
  getParentRoute: () => PrivateRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/_login/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateImport
      parentRoute: typeof rootRoute
    }
    '/_private/home': {
      id: '/_private/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof PrivateHomeImport
      parentRoute: typeof PrivateImport
    }
    '/_private/options': {
      id: '/_private/options'
      path: '/options'
      fullPath: '/options'
      preLoaderRoute: typeof PrivateOptionsImport
      parentRoute: typeof PrivateImport
    }
    '/_private/rules': {
      id: '/_private/rules'
      path: '/rules'
      fullPath: '/rules'
      preLoaderRoute: typeof PrivateRulesImport
      parentRoute: typeof PrivateImport
    }
    '/_private/test': {
      id: '/_private/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof PrivateTestImport
      parentRoute: typeof PrivateImport
    }
    '/_auth/_login/': {
      id: '/_auth/_login/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof AuthImport
    }
    '/_private/game/': {
      id: '/_private/game/'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof PrivateGameIndexImport
      parentRoute: typeof PrivateImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginIndexRoute: AuthLoginIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface PrivateRouteChildren {
  PrivateHomeRoute: typeof PrivateHomeRoute
  PrivateOptionsRoute: typeof PrivateOptionsRoute
  PrivateRulesRoute: typeof PrivateRulesRoute
  PrivateTestRoute: typeof PrivateTestRoute
  PrivateGameIndexRoute: typeof PrivateGameIndexRoute
}

const PrivateRouteChildren: PrivateRouteChildren = {
  PrivateHomeRoute: PrivateHomeRoute,
  PrivateOptionsRoute: PrivateOptionsRoute,
  PrivateRulesRoute: PrivateRulesRoute,
  PrivateTestRoute: PrivateTestRoute,
  PrivateGameIndexRoute: PrivateGameIndexRoute,
}

const PrivateRouteWithChildren =
  PrivateRoute._addFileChildren(PrivateRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof PrivateRouteWithChildren
  '/home': typeof PrivateHomeRoute
  '/options': typeof PrivateOptionsRoute
  '/rules': typeof PrivateRulesRoute
  '/test': typeof PrivateTestRoute
  '/': typeof AuthLoginIndexRoute
  '/game': typeof PrivateGameIndexRoute
}

export interface FileRoutesByTo {
  '': typeof PrivateRouteWithChildren
  '/home': typeof PrivateHomeRoute
  '/options': typeof PrivateOptionsRoute
  '/rules': typeof PrivateRulesRoute
  '/test': typeof PrivateTestRoute
  '/': typeof AuthLoginIndexRoute
  '/game': typeof PrivateGameIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_private': typeof PrivateRouteWithChildren
  '/_private/home': typeof PrivateHomeRoute
  '/_private/options': typeof PrivateOptionsRoute
  '/_private/rules': typeof PrivateRulesRoute
  '/_private/test': typeof PrivateTestRoute
  '/_auth/_login/': typeof AuthLoginIndexRoute
  '/_private/game/': typeof PrivateGameIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/home' | '/options' | '/rules' | '/test' | '/' | '/game'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/home' | '/options' | '/rules' | '/test' | '/' | '/game'
  id:
    | '__root__'
    | '/_auth'
    | '/_private'
    | '/_private/home'
    | '/_private/options'
    | '/_private/rules'
    | '/_private/test'
    | '/_auth/_login/'
    | '/_private/game/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  PrivateRoute: typeof PrivateRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  PrivateRoute: PrivateRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "r&__root.tsx",
      "children": [
        "/_auth",
        "/_private"
      ]
    },
    "/_auth": {
      "filePath": "r&_auth.tsx",
      "children": [
        "/_auth/_login/"
      ]
    },
    "/_private": {
      "filePath": "r&_private.tsx",
      "children": [
        "/_private/home",
        "/_private/options",
        "/_private/rules",
        "/_private/test",
        "/_private/game/"
      ]
    },
    "/_private/home": {
      "filePath": "r&_private/r&home.tsx",
      "parent": "/_private"
    },
    "/_private/options": {
      "filePath": "r&_private/r&options.tsx",
      "parent": "/_private"
    },
    "/_private/rules": {
      "filePath": "r&_private/r&rules.tsx",
      "parent": "/_private"
    },
    "/_private/test": {
      "filePath": "r&_private/r&test.tsx",
      "parent": "/_private"
    },
    "/_auth/_login/": {
      "filePath": "r&_auth/r&_login/r&index.tsx",
      "parent": "/_auth"
    },
    "/_private/game/": {
      "filePath": "r&_private/r&game/r&index.tsx",
      "parent": "/_private"
    }
  }
}
ROUTE_MANIFEST_END */
